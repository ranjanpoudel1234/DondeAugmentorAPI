// <auto-generated />
using System;
using Donde.Augmentor.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Donde.Augmentor.Infrastructure.Migrations
{
    [DbContext(typeof(DondeContext))]
    [Migration("20190312123724_UpdateIsActiveTypeAndAddFkRelationships")]
    partial class UpdateIsActiveTypeAndAddFkRelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.Audio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Name");

                    b.Property<Guid>("OrganizationId");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("Audios");
                });

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.AugmentImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Name");

                    b.Property<Guid>("OrganizationId");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("AugmentImages");
                });

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.AugmentObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("AddedDate");

                    b.Property<Guid>("AudioId");

                    b.Property<Guid>("AugmentImageId");

                    b.Property<Guid>("AvatarId");

                    b.Property<string>("Description");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<Guid>("OrganizationId");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AudioId");

                    b.HasIndex("AugmentImageId");

                    b.HasIndex("AvatarId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("AugmentObjects");
                });

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.Avatar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Name");

                    b.Property<Guid>("OrganizationId");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("Avatars");
                });

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<Guid>("OrganizationId");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.Audio", b =>
                {
                    b.HasOne("Donde.Augmentor.Core.Domain.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.AugmentImage", b =>
                {
                    b.HasOne("Donde.Augmentor.Core.Domain.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.AugmentObject", b =>
                {
                    b.HasOne("Donde.Augmentor.Core.Domain.Models.Audio", "Audio")
                        .WithMany()
                        .HasForeignKey("AudioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Donde.Augmentor.Core.Domain.Models.AugmentImage", "AugmentImage")
                        .WithMany()
                        .HasForeignKey("AugmentImageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Donde.Augmentor.Core.Domain.Models.Avatar", "Avatar")
                        .WithMany()
                        .HasForeignKey("AvatarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Donde.Augmentor.Core.Domain.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Donde.Augmentor.Core.Domain.Models.Avatar", b =>
                {
                    b.HasOne("Donde.Augmentor.Core.Domain.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
